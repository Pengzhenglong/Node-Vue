* {
  box-sizing: border-box;
  outline: none; //边框重置
}

html {
  font-size: 13px;
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2rem;
  background-color: #f1f1f1;
}

a {
  color: #999;
}

// colors
$colors:("primary":#db9e3f,
  "white":#fff,
  "light":#f9f9f9,
  "grey":#999,
  "dark-1":#343440,
  "dark":#222,
  "black":#000,
);

@each $colorKey,
$color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }

  .bg-#{$colorKey} {
    background-color: $color;
  }
}

// text
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var;
  }
}

// font  size  
$base-font-size:1rem;
$font-size:(xs:.67692, //10px
  sm:.9231, //12px
  md:1, //13px
  lg:1.0769, //14px
  xl:1.2308, //16px
);

@each $sizeKey,
$size in $font-size {
  .fs-#{$sizeKey} {
    font-size: $size *$base-font-size;
  }
}

;

// flex

.d-flex {
  display: flex;
}

.felx-colum {
  flex-direction: column;
}

// 垂直方向
$flex-jc:(start:flex-start,
  end:flex-end,
  center:center,
  betweend:space-between,
  around:space-around,
);

@each $key,
$value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

// 水平方向
$flex-ai:(start:flex-start,
  end:flex-end,
  center:center,
  stretch:stretch,

);

@each $key,
$value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

.felx-1 {
  flex: 1;
}

.flex-grow-1 {
  flex-grow: 1;
}

// spaceing

// 0 -5:0
// .mt-1=>  margin   top   .pb-2
$spacing-types:(m:margin, p:padding);

$spacing-directions:(t:top, r:right, b:bottom, l:left);

$sapcing-base-size: 1rem;
$spacing-sizes:(0:0,
  1:0.25,
  2:0.5,
  3:1,
  4:1.5,
  5:3,
);

@each $typeKey,
$type in $spacing-types {

  //.m-1
  @each $sizeKey,
  $size in $spacing-sizes {

    //.m-0{margin :0.25rem}
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size*$sapcing-base-size;
    }
  }

  //.mx-1 ,.my-1
  @each $sizeKey,
  $size in $spacing-sizes {

    //.m-0{margin :0.25rem}
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size*$sapcing-base-size;
      #{$type}-right: $size*$sapcing-base-size;
    }

    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size*$sapcing-base-size;
      #{$type}-bottom: $size*$sapcing-base-size;
    }

  }

  // .mt-1
  @each $directionKey,
  $direction in $spacing-directions {

    @each $sizeKey,
    $size in $spacing-sizes {

      //.mt-0{margin :0.25rem}
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size*$sapcing-base-size;
      }
    }
  }


}